@model List<Prog7311_Assignment_2.Models.Product>
@{
    ViewData["Title"] = "Farmer Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow: hidden;
    }

    .video-background-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -2;
    }

    .video-background {
        position: absolute;
        top: 50%;
        left: 50%;
        min-width: 100%;
        min-height: 100%;
        width: auto;
        height: auto;
        transform: translateX(-50%) translateY(-50%);
        z-index: -1;
    }

    .container {
        background: rgba(255, 255, 255, 0.9);
        padding: 20px;
        border-radius: 10px;
        margin-top: 20px;
        margin-bottom: 20px;
        position: relative;
        z-index: 10;
        max-height: 80vh;
        overflow-y: auto;
    }

    .table, .form-group label, h2, h3 {
        color: #333;
    }

    .scrollable-content {
        max-height: 300px;
        overflow-y: auto;
    }
</style>

<div class="video-background-container">
    <video class="video-background" autoplay muted loop playsinline>
        <source src="/videos/vecteezy_two-ducks-are-walking-foraging-on-the-green-grass-the-canal_25555270.mp4" type="video/mp4">
        <p>Your browser does not support the video tag, or the video file could not be found.</p>
    </video>
</div>

<div class="container">
    <h2>Farmer Dashboard</h2>

    <h3>Add New Product</h3>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            <p>@TempData["Error"]</p>
        </div>
    }
    <form asp-controller="Dashboard" asp-action="AddProduct" method="post" id="addProductForm">
        <div class="form-group">
            <label>Name</label>
            <input type="text" name="name" class="form-control" required />
        </div>
        <div class="form-group">
            <label>Category</label>
            <select name="category" id="categorySelect" class="form-control" required onchange="toggleOtherCategory()">
                <option value="">Select a category</option>
                <option value="Food">Food</option>
                <option value="Wheat">Wheat</option>
                <option value="Dairy">Dairy</option>
                <option value="Other">Other</option>
            </select>
            <input type="text" name="otherCategory" id="otherCategoryInput" class="form-control mt-2" style="display:none;" placeholder="Enter other category" />
        </div>
        <div class="form-group">
            <label>Production Date</label>
            <input type="date" name="productionDate" class="form-control" required />
        </div>
        <div class="form-group">
            <label>End Date</label>
            <input type="date" name="endDate" class="form-control" required />
        </div>
        <button type="submit" class="btn btn-success mt-2">Add Product</button>
    </form>

    <h3>Your Products</h3>
    <div class="scrollable-content">
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Production Date</th>
                    <th>End Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Category</td>
                        <td>@product.ProductionDate.ToShortDateString()</td>
                        <td>@product.EndDate.ToShortDateString()</td>
                        <td>
                            <form asp-controller="Dashboard" asp-action="EditProduct" method="post" class="d-inline edit-product-form">
                                <input type="hidden" name="id" value="@product.Id" />
                                <input type="text" name="name" value="@product.Name" class="form-control d-inline-block w-25" required />
                                <select name="category" class="form-control d-inline-block w-25 category-select" required onchange="toggleOtherCategoryEdit('@product.Id')">
                                    @{
                                        var categories = new[] { "Food", "Wheat", "Dairy", "Other" };
                                        foreach (var category in categories)
                                        {
                                            var isSelected = product.Category == category || (category == "Other" && !categories.Contains(product.Category));
                                            if (isSelected)
                                            {
                                                <option value="@category" selected>@category</option>
                                            }
                                            else
                                            {
                                                <option value="@category">@category</option>
                                            }
                                        }
                                    }
                                </select>
                                <input type="text" name="otherCategoryEdit_@product.Id" id="otherCategoryEdit_@product.Id" class="form-control mt-2 d-inline-block w-25 other-category-input" style="display:@(product.Category == "Other" || !new[] { "Food", "Wheat", "Dairy" }.Contains(product.Category) ? "inline-block" : "none");" value="@(new[] { "Food", "Wheat", "Dairy" }.Contains(product.Category) ? "" : product.Category)" />
                                <input type="date" name="productionDate" value="@product.ProductionDate.ToString("yyyy-MM-dd")" class="form-control d-inline-block w-25" required />
                                <input type="date" name="endDate" value="@product.EndDate.ToString("yyyy-MM-dd")" class="form-control d-inline-block w-25" required />
                                <button type="submit" class="btn btn-primary btn-sm">Save</button>
                            </form>
                            <form asp-controller="Dashboard" asp-action="DeleteProduct" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this product?');">
                                <input type="hidden" name="id" value="@product.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script>
        function toggleOtherCategory() {
            var select = document.getElementById('categorySelect');
            var otherInput = document.getElementById('otherCategoryInput');
            if (select.value === 'Other') {
                otherInput.style.display = 'block';
                select.required = false;
                otherInput.required = true;
            } else {
                otherInput.style.display = 'none';
                otherInput.value = '';
                select.required = true;
                otherInput.required = false;
            }
        }

        function toggleOtherCategoryEdit(productId) {
            var select = document.querySelector(`select.category-select[onchange="toggleOtherCategoryEdit('${productId}')"]`);
            var otherInput = document.getElementById(`otherCategoryEdit_${productId}`);
            if (select.value === 'Other') {
                otherInput.style.display = 'inline-block';
                select.required = false;
                otherInput.required = true;
            } else {
                otherInput.style.display = 'none';
                otherInput.value = '';
                select.required = true;
                otherInput.required = false;
            }
        }

        document.getElementById('addProductForm').addEventListener('submit', function (e) {
            var select = document.getElementById('categorySelect');
            var otherInput = document.getElementById('otherCategoryInput');
            if (select.value === 'Other' && otherInput.value) {
                select.value = otherInput.value;
            }

            // dates
            var productionDate = new Date(document.querySelector('input[name="productionDate"]').value);
            var endDate = new Date(document.querySelector('input[name="endDate"]').value);
            if (productionDate >= endDate) {
                e.preventDefault();
                alert("Production date must be before the end date.");
            }
        });

        document.querySelectorAll('form.edit-product-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                var productId = this.querySelector('input[name="id"]').value;
                var select = this.querySelector(`select.category-select[onchange="toggleOtherCategoryEdit('${productId}')"]`);
                var otherInput = this.querySelector(`input.other-category-input`);
                if (select.value === 'Other' && otherInput.value) {
                    select.value = otherInput.value;
                }

                //  dates for edit form
                var productionDate = new Date(this.querySelector('input[name="productionDate"]').value);
                var endDate = new Date(this.querySelector('input[name="endDate"]').value);
                if (productionDate >= endDate) {
                    e.preventDefault();
                    alert("Production date must be before the end date.");
                }
            });
        });
    </script>
</div>